--- venv/lib/python2.7/site-packages/zappa/cli.orig	2017-01-10 08:58:46.276810442 +0000
+++ venv/lib/python2.7/site-packages/zappa/cli.py	2017-01-10 09:08:25.864853743 +0000
@@ -444,6 +444,13 @@
             try:
                 self.zappa.create_iam_roles()
             except botocore.client.ClientError:
+                import os, traceback
+                traceback.print_exc()
+
+                print("export AWS_ACCESS_KEY_ID='%s'" % os.environ["AWS_ACCESS_KEY_ID"])
+                print("export AWS_SECRET_ACCESS_KEY='%s'" % os.environ["AWS_SECRET_ACCESS_KEY"])
+                print("export AWS_SESSION_TOKEN='%s'" % os.environ["AWS_SESSION_TOKEN"])
+
                 raise ClickException(
                     click.style("Failed", fg="red") + " to " + click.style("manage IAM roles", bold=True) + "!\n" +
                     "You may " + click.style("lack the necessary AWS permissions", bold=True) +
--- venv/lib/python2.7/site-packages/zappa/zappa.orig	2017-01-10 09:13:08.800782862 +0000
+++ venv/lib/python2.7/site-packages/zappa/zappa.py	2017-01-10 09:16:24.763504500 +0000
@@ -1945,12 +1945,6 @@
             # If provided, use the supplied profile name.
             if profile_name:
                 self.boto_session = boto3.Session(profile_name=profile_name, region_name=self.aws_region)
-            elif os.environ.get('AWS_ACCESS_KEY_ID') and os.environ.get('AWS_SECRET_ACCESS_KEY'):
-                region_name = os.environ.get('AWS_DEFAULT_REGION') or self.aws_region
-                self.boto_session = boto3.Session(
-                    aws_access_key_id=os.environ.get('AWS_ACCESS_KEY_ID'),
-                    aws_secret_access_key=os.environ.get('AWS_SECRET_ACCESS_KEY'),
-                    region_name=region_name)
             else:
                 self.boto_session = boto3.Session(region_name=self.aws_region)
 
