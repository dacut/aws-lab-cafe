AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS Lab Cafe -- allow students in a lab to deploy EC2 instances without having to know about AWS."
Parameters:
  DynamoDBTablePrefix:
    Type: String
    Default: "LabCafe."
    Description: Prefix for all DynamoDB tables used by LabCafe.
  EnableDebug:
    Type: String
    Default: false
    Description: Whether debugging output should be provided.
    AllowedValues:
      - false
      - true
  LambdaMemorySize:
    Type: Number
    Default: 512
    Description: The amount of memory (MB) available to the Lambda function.
    AllowedValues: [128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832,
      896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536]
    ConstraintDescription: Must be from 128-1536 MB in multiples of 64 MB.
  EventTableReadCapacityUnits:
    Type: Number
    Default: 5
    Description: The DynamoDB provisioned read capacity for the events table.
    MinValue: 1
  EventTableWriteCapacityUnits:
    Type: Number
    Default: 1
    Description: The DynamoDB provisioned write capacity for the events table.
    MinValue: 1
  UserTableReadCapacityUnits:
    Type: Number
    Default: 5
    Description: The DynamoDB provisioned read capacity for the users table.
    MinValue: 1
  UserTableWriteCapacityUnits:
    Type: Number
    Default: 1
    Description: The DynamoDB provisioned write capacity for the users table.
    MinValue: 1
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      Label:
        default: Object names
      Parameters:
        - DynamoDBTablePrefix
    ParameterGroups:
      Label:
        default: Performance
      Parameters:
        - LambdaMemorySize
        - EventTableReadCapacityUnits
        - EventTableWriteCapacityUnits
        - UserTableReadCapacityUnits
        - UserTableWriteCapacityUnits
    ParameterGroups:
      Label:
        default: Advanced
      Parameters:
        - EnableDebug
Resources:
  Deployment:
    Type: "Custom::Zappa"
    Properties:
      Debug: !Ref EnableDebug
      EncryptionKeyId: !Ref EncryptionKey
      Region: !Ref "AWS::Region"
      S3Bucket: !Ref ArtifactBucket
      ServiceToken: !GetAtt DeployFunction.Arn
  DeployFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: cuthbert-labcafe-artifacts
        S3Key: aws-lab-cafe.zip
      Description: AWS Lab Cafe webserver.
      Environment:
        Variables:
          DEBUG: !Ref EnableDebug
          ENCRYPTION_KEY_ID: !Ref EncryptionKey
          LABCAFE_TABLE_PREFIX: !Ref DynamoDBTablePrefix
      Handler: "deploy.zappa_deploy"
      MemorySize: 1024
      Role: !GetAtt ZappaDeployRole.Arn
      Runtime: python2.7
      Timeout: 300
  EncryptionKey:
    Type: "AWS::KMS::Key"
    Properties:
      Description: AWS Lab Cafe encryption key
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: key-default-1
        Statement:
          -
            Sid: Allow key administration
            Effect: Allow
            Principal:
              AWS: !Join ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":root"]]
            Action:
              - "kms:*"
            Resource: "*"
          -
            Sid: Allow encryption/decryption
            Effect: Allow
            Principal:
              AWS: !GetAtt ZappaDeployRole.Arn
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey
              - "kms:ReEncrypt*"
            Resource: "*"
  ArtifactBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
          -
            Id: Delete Zappa objects
            ExpirationInDays: 1
      Tags:
        -
          Key: Purpose
          Value: !Join ["", ["Artifacts for CloudFormation stack ", !Ref "AWS::StackName"]]
  ZappaDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
               Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        -
          PolicyName: ZappaDeploymentAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "apigateway:*"
                  - "lambda:*"
                  - "logs:*"
                Resource: "*"
            Statement:
              -
                Effect: Allow
                Action:
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  AWS:
                    - !Join ["", ["arn:aws:s3:::", !Ref ArtifactBucket]]
                    - !Join ["", ["arn:aws:s3:::", !Ref ArtifactBucket, "/*"]]
  EventsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: EventId
          AttributeType: S
      KeySchema:
        -
          AttributeName: EventId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref EventTableReadCapacityUnits
        WriteCapacityUnits: !Ref EventTableWriteCapacityUnits
      TableName: !Join ["", [ !Ref DynamoDBTablePrefix , "Events"]]
  UsersTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: Email
          AttributeType: S
        -
          AttributeName: EventId
          AttributeType: S
      KeySchema:
        -
          AttributeName: Email
          KeyType: HASH
        -
          AttributeName: EventId
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref UserTableReadCapacityUnits
        WriteCapacityUnits: !Ref UserTableWriteCapacityUnits
      TableName: !Join ["", [ !Ref DynamoDBTablePrefix , "Users"]]
Outputs:
  DeployFunctionARN:
    Value: !GetAtt DeployFunction.Arn
